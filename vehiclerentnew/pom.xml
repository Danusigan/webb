<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.5.4</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.vehicle_rental</groupId>
	<artifactId>vehicle</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>vehicle</name>
	<description>project for vehicle rent</description>
	<url/>
	<licenses>
		<license/>
	</licenses>
	<developers>
		<developer/>
	</developers>
	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>
	<properties>
		<java.version>17</java.version>
		<!-- SonarQube Properties -->
		<sonar.organization>danusigan</sonar.organization>
		<sonar.projectKey>Danusigan_webb</sonar.projectKey>
		<sonar.host.url>https://sonarcloud.io</sonar.host.url>
		<sonar.coverage.exclusions>**/model/**,**/entity/**,**/config/**,**/dto/**,**/VehicleRentApplication.java</sonar.coverage.exclusions>
		<sonar.coverage.minimumCoverage>0</sonar.coverage.minimumCoverage>
		<sonar.qualitygate.wait>false</sonar.qualitygate.wait> <!-- ADD THIS -->
		
		<!-- JaCoCo -->
		<jacoco.version>0.8.11</jacoco.version>
		
		<!-- Surefire -->
		<surefire.version>3.2.5</surefire.version>
	</properties>
	<dependencies>
		<!-- YOUR EXISTING DEPENDENCIES HERE (unchanged) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!-- ... other dependencies ... -->
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			
			<!-- Surefire Plugin for test execution -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${surefire.version}</version>
				<configuration>
					<includes>
						<include>**/*Test.java</include>
						<include>**/*Tests.java</include>
					</includes>
					<excludes>
						<exclude>**/*Selenium*</exclude>
						<exclude>**/*UI*</exclude>
						<exclude>**/*UITest*</exclude>
					</excludes>
				</configuration>
			</plugin>
			
			<!-- JaCoCo Plugin with complete configuration -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<executions>
					<!-- Prepares property with jacoco agent which is passed to VM -->
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${project.build.directory}/jacoco.exec</destFile>
							<propertyName>surefireArgLine</propertyName>
						</configuration>
					</execution>
					<!-- Ensures code coverage report is created after unit tests execution -->
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/jacoco.exec</dataFile>
							<outputDirectory>${project.build.directory}/site/jacoco</outputDirectory>
						</configuration>
					</execution>
					<!-- Prepares property with jacoco agent for integration tests -->
					<execution>
						<id>pre-integration-test</id>
						<goals>
							<goal>prepare-agent-integration</goal>
						</goals>
						<configuration>
							<destFile>${project.build.directory}/jacoco-it.exec</destFile>
							<propertyName>failsafeArgLine</propertyName>
						</configuration>
					</execution>
					<!-- Ensures code coverage report is created after integration tests -->
					<execution>
						<id>post-integration-test</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report-integration</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/jacoco-it.exec</dataFile>
							<outputDirectory>${project.build.directory}/site/jacoco-it</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
